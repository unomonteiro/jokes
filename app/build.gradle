apply plugin: 'com.android.application'

def keystorePropertiesFile = file(System.properties['user.home']+'/dev/monteirodev/keystore/keystore.properties')
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    signingConfigs {
        releaseConfig {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(System.properties['user.home']+'/dev/monteirodev/keystore/monteirodev.jks')
            //storeFile keystoreProperties['storeFile']
            storePassword keystoreProperties['storePassword']
        }
    }
    compileSdkVersion 27
    defaultConfig {
        applicationId "io.monteirodev.jokes"
        minSdkVersion 15
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseConfig
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    // manualJoke
    implementation project(':manualJoke')
    implementation project(':JokeWizard')
    implementation project(':jokedisplay')
}
